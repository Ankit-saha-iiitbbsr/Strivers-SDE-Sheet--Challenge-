#include <bits/stdc++.h> 

int minSumPath(vector<vector<int>> &grid) {
    // Write your code here.
      /*int n=grid.size();
    int m=grid[0].size();
    vector<vector<int>> dp(n, vector<int>(m,0));
    for(int i=0; i<n; i++) {
        for(int j=0; j<m; j++) {
            if(i == 0 && j == 0) dp[i][j]=grid[i][j];
            else {
                int up=grid[i][j];
                if(i > 0) up += dp[i-1][j];
                else up += 1e9;
                int left = grid[i][j];
                if(j > 0) left += dp[i][j-1];
                else left += 1e9;
                
                dp[i][j] = min(left, up);
            }
        }
    }
    return dp[n-1][m-1];*/

    int n=grid.size();
    int m=grid[0].size();
    vector<int> prev(m, 0);
    for(int i=0; i<n; i++) {
        vector<int> cur(m, 0);
        for(int j=0; j<m; j++) {
            if(i==0 && j==0) cur[0]=grid[0][0];
            else {
                long int up=INT_MAX, left=INT_MAX;
                if(i>0) up=grid[i][j]+prev[j];
                if(j>0) left=grid[i][j]+cur[j-1];
                cur[j]=min(up, left);
            }
        }
        prev=cur;
    }
    return prev[m-1];
}
